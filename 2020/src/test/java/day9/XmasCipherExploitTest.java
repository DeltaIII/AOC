package day9;

import static org.assertj.core.api.BDDAssertions.then;

import java.io.IOException;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import org.junit.jupiter.api.Test;
import util.InputFileReader;

class XmasCipherExploitTest {

    private static final String TEST_DATA = "day9/testData.txt";
    private static final String INPUT = "day9/input.txt";

    @Test
    void testGetEncryptionWeakness_testData() throws IOException {
        // Given
        final int preambleLength = 5;
        final List<Long> inputData =
            InputFileReader.readObjects(TEST_DATA, Long::parseLong).collect(Collectors.toList());
        final XmasCipherExploit exploit = new XmasCipherExploit(preambleLength);

        // When
        final long weakness = exploit.getEncryptionWeakness(inputData);

        // Then
        then(weakness).isEqualTo(62L);
    }

    @Test
    void testGetEncryptionWeakness_part2() throws IOException {
        // Given
        final int preambleLength = 25;
        final List<Long> inputData =
            InputFileReader.readObjects(INPUT, Long::parseLong).collect(Collectors.toList());
        final XmasCipherExploit exploit = new XmasCipherExploit(preambleLength);

        // When
        final long weakness = exploit.getEncryptionWeakness(inputData);

        // Then
        then(weakness).isEqualTo(93727241L);
    }
}